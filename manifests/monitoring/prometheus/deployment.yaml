apiVersion: apps/v1 
kind: Deployment
metadata:
  name: prometheus
  labels:
    app: prometheus
spec:
  revisionHistoryLimit: 1
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
      - image: prom/prometheus
        name: prometheus
        args:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus/"
            - "--web.enable-lifecycle"
            - "--web.enable-admin-api"
            - "--storage.tsdb.retention.size=200GB"
        volumeMounts:
        - name: config
          mountPath: /etc/prometheus
        - name: data
          mountPath: /prometheus
        ports:
        - containerPort: 9090
        resources:
          limits:
            cpu: 4
            memory: 1Gi
            ephemeral-storage: 64Mi
          requests:
            cpu: 250m
            memory: 512Mi
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: prometheus-config
          readOnly: false
      - name: data
        persistentVolumeClaim:
          claimName: prometheus-data-hdd
          readOnly: false
      securityContext:
        fsGroup: 0
        runAsUser: 0
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: prometheus-data-hdd
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 256Gi
  storageClassName: rook-cephfs-hdd
  volumeMode: Filesystem
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: prometheus-config
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 16Gi
  storageClassName: rook-cephfs
  volumeMode: Filesystem