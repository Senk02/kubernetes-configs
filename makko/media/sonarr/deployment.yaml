apiVersion: apps/v1 
kind: Deployment
metadata:
  name: sonarr
  labels:
    app: sonarr
spec:
  revisionHistoryLimit: 1
  replicas: 1
  selector:
    matchLabels:
      app: sonarr
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: sonarr
    spec:
      nodeSelector:
        kubernetes.io/hostname: talos-nht-60v
      containers:
      - image: lscr.io/linuxserver/sonarr:4.0.15
        name: sonarr
        env:
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        - name: TZ
          value: "America/Chicago"
        volumeMounts:
        - name: media
          mountPath: /media
        - name: config
          mountPath: /config
        - name: data
          mountPath: /data
        ports:
        - containerPort: 8989
        resources:
          limits:
            cpu: "4"
            memory: 2048Mi
            ephemeral-storage: 2Gi
          requests:
            cpu: 100m 
            memory: 512Mi
            ephemeral-storage: 32Mi
      volumes:
      - name: media
        persistentVolumeClaim:
          claimName: jellyfin-data
          readOnly: false
      - name: config
        persistentVolumeClaim:
          claimName: sonarr-config
          readOnly: false
      - name: data
        hostPath:
          path: /var/mnt/transmission-cache
          type: DirectoryOrCreate
      securityContext:
        fsGroup: 1000
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: sonarr-config
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 4Gi
  storageClassName: rook-cephfs
  volumeMode: Filesystem
